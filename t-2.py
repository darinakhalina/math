import numpy as np

# Детермінант 2х2 матриці
A = np.array(
 [[1, 2],
 [3, 4]]
 )
result = np.linalg.det(A)
result_round = round(result)
print("Детермінант 2х2 матриці result", result)
print("Детермінант 2х2 матриці result round", result_round)

# Детермінант 3х3 матриці
A = np.array(
 [[4, -5, 7],
 [1, -4, 9],
 [-4, 0, 5],
 ]
 )
print("Детермінант 3х3 матриці result round", round(np.linalg.det(A)))

# Властивості детермінантів
# Визначник не змінюється під час транспонування матриці
A = np.array(
 [[4, -5, 7],
 [1, -4, 9],
 [-4, 0, 5],
 ]
 )
At = np.transpose(A)
print("Базова матриця A:", A)
print(f"Визначник базової матриці А: {int(np.linalg.det(A))}")
print("Транспонована матриця At:", At)
print(f"Визначник транспонованої матриці At: {int(np.linalg.det(At))}")

# Якщо матриця містить рядок, що складається з нулів, її визначник дорівнює нулю.
A = np.array(
 [[2, 7, 1, 2],
 [6, 1, 3, -1],
 [0, 0, 0, 0],
 [2, 9, 5, -1],
 ])
print(f"Визначник матриці А: {int(np.linalg.det(A))}")

# Якщо в матриці поміняти місцями якісь два рядки, то її визначник змінить знак на протилежний.
A = np.array(
 [[1, 0, -1],
 [11, 4, 7],
 [-6, 0, 0],
 ])
B = np.array(
 [[11, 4, 7],
 [1, 0, -1],
 [-6, 0, 0],
 ])
print(f"Визначник матриці А: {int(np.linalg.det(A))}")
print(f"Визначник матриці B: {int(np.linalg.det(B))}")

# Якщо матриця має два однакові рядки, то її визначник дорівнює нулю.
A = np.array(
 [[2, 7, 1, 2],
 [6, 1, 3, -1],
 [2, 7, 1, 2],
 [2, 9, 5, -1],
 ]
 )
print(f"Визначник матриці А: {int(np.linalg.det(A))}")

# При множенні рядка матриці на число її визначник множиться на це число.
A = np.array(
    [[2, 4, -12],
     [10, 3, 0],
     [1, -1, 1],
     ]
    )
B = np.array(
    [[1, 2, -6],
     [10, 3, 0],
     [1, -1, 1],
     ]
    )
print(f"Визначник матриці А: {int(np.linalg.det(A))}")
print(f"Визначник матриці B: {int(np.linalg.det(B))}")

A = np.array(
 [[6, 4, 12],
 [10, 3, 0],
 [1, -1, 1],
 ]
 )
# [6,4,12] = [2+4,3+1,9+3]
B = np.array(
 [[2, 3, 9],
 [10, 3, 0],
 [1, -1, 1],
 ]
 )
C = np.array(
 [[4, 1, 3],
 [10, 3, 0],
 [1, -1, 1],
 ]
 )
print(f"Визначник матриці А: {round(np.linalg.det(A))}")
print(f"Визначник матриці B: {round(np.linalg.det(B))}")
print(f"Визначник матриці C: {round(np.linalg.det(C))}")

# Якщо один із рядків матриці є лінійною комбінацією інших рядків цієї матриці, то її визначник дорівнює нулю.
A = np.array(
 [[2, 7, -1],
 [0, 1, 3],
 [2, 9, 5],
 ]
 )
print(f"Визначник матриці А: {round(np.linalg.det(A))}")

# Визначник матриці не зміниться, якщо до якогось її рядка додати лінійну комбінацію інших рядків цієї матриці.
A = np.array(
 [[3, 8, 0],
 [1, 1, 1],
 [2, 9, 5],
 ]
 )
# [2,7,-1] = [3-1,8-1,0-1]
B = np.array(
 [[2, 7, -1],
 [1, 1, 1],
 [2, 9, 5],
 ]
 )
print(f"Визначник матриці А: {round(np.linalg.det(A))}")
print(f"Визначник матриці B: {round(np.linalg.det(B))}")


# Розкладання визначника по рядку або стовпцю
A = np.array(
 [[4, -5, 7],
 [1, -4, 9],
 [-4, 0, 5],
 ]
 )
print("Розкладання визначника по рядку або стовпцю", round(np.linalg.det(A)))

#Обернена матриця
A = np.array(
 [[1, 0, 3],
 [-1, -1, 2],
 [4, 7, 2],
 ]
 )
B = np.array(
 [[65],
 [25],
 [130],
 ]
 )
print(f"Визначник матриці A: {round(np.linalg.det(A))}")
A_back = np.linalg.inv(A)
print(f"Обернена матриця до матриці A: \r\n {A_back }")
print(f"Вектор-стовпець рішень: \r\n {A_back.dot(B)}")

# Рішення системи лінійних рівнянь. Сумісність

# Задача 1
# підсн + підсніж + підсніжн = 60
# підсн + підсн + нарцис = 50
# тюльпан + нарцис + підсніж = 90

a = np.array(
 [[3, 0, 0],
 [2, 1, 0],
 [1, 1, 1]]
 )
b = np.array([60, 50, 90])

print(f"A = {a}")
print(b)
print(np.linalg.solve(a, b))

# Задача 2
# шапка + шапка + шапка = 30
# шапка + рукавиці + рукавиці = 18
# рукавиці - шккарпетки = 2
# шкарпеткі + шапка + рукавица = ?

a = np.array([[3, 0, 0], [1, 2, 0], [0, 1, -1]])
b = np.array([30, 18, 2])
x = np.linalg.solve(a, b)

print ("Матриця A:\n", a)
print ("Вектор b:\n", b)
print ("Вирішення системи:\n", x)

res = x[2]+x[0]*x[1]
print("result", res)

# Задача 2
# 2яблока + 3груша + 4апельсин = 150
# 1яблоко + 2груші = 70
# 3яблока + 1 апельсин = 90

a = np.array(
 [[2, 3, 4],
 [1, 2, 0],
 [3, 0, 1]]
 )
b = np.array([150, 70, 90])
print("fruits", np.linalg.solve(a, b))
